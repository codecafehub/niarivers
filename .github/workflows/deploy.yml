name: Deploy Nia Rivers Website

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up PHP and install dependencies
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pdo, pdo_mysql, bcmath, soap

      - name: Install Composer Dependencies
        run: composer install --no-progress --no-dev --optimize-autoloader

      # Step 3: Set up Node.js and build frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install NPM Dependencies
        run: npm install

      - name: Build Frontend Assets
        run: npm run build

      # Step 4: Deploy Files to Server using scp (Secure Copy)
      - name: Deploy Application Files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.MAIN_HOST }}
          username: ${{ secrets.MAIN_USERNAME }}
          password: ${{ secrets.MAIN_PASSWORD }}
          port: ${{ secrets.MAIN_PORT }}
          source: "." # This means the current directory on the runner
          target: ${{ secrets.PROJECT_PATH }}
          # Exclude files/folders you DON'T want to overwrite on the server
          strip_components: 1
          overwrite: true
          rm: true
          # IMPORTANT: We exclude .env so we don't overwrite server secrets.
          # We exclude storage because it contains logs and user-uploaded files.
          ignore: |
            .env
            /storage/
            /node_modules/
            /.git/
            /.github/

      # Step 5: Run Final Commands on Server
      - name: Run Post-Deployment Commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.MAIN_HOST }}
          username: ${{ secrets.MAIN_USERNAME }}
          password: ${{ secrets.MAIN_PASSWORD }}
          port: ${{ secrets.MAIN_PORT }}
          script: |
            echo "üöÄ Running post-deployment commands on server..."
            cd ${{ secrets.PROJECT_PATH }}

            echo "üóÉÔ∏è Running database migrations..."
            php artisan migrate --force

            echo "‚ú® Optimizing application..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            echo "üéâ Deployment complete!"